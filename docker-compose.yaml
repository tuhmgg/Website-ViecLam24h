services:
  app:
    # Sử dụng image đẩy lên GHCR
    image: ghcr.io/locmaymo/tim:latest
    container_name: app
    restart: unless-stopped

    # Lấy biến môi trường từ file .env (nằm ở cùng cấp với docker-compose.yaml)
    env_file:
      - .env

    # Nếu muốn override, có thể dùng environment để chỉ định giá trị mặc định khi .env thiếu
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-tim}
      - DB_USERNAME=${DB_USERNAME:-loc}
      - DB_PASSWORD=${DB_PASSWORD:-loc}

    # Mount các thư mục cần thiết
    # Mount file .env để artisan key:generate có thể thao tác
    volumes:
      - ./.env:/var/www/html/.env
      # - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      # - .:/var/www/html
      # Mount volume riêng này vào storage/app/public
      - storage-data:/var/www/html/storage/app/public

    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - redis
    networks:
      - tim

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-loc}
      - MYSQL_DATABASE=${DB_DATABASE:-tim}
      - MYSQL_USER=${DB_USERNAME:-loc}
      - MYSQL_PASSWORD=${DB_PASSWORD:-loc}
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - tim

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/ssl:/etc/ssl
      # Mount cùng volume storage-data vào cùng đường dẫn
      - storage-data:/var/www/html/storage/app/public
    environment:
      - PORT=9000
      - TZ=Asia/Ho_Chi_Minh
    depends_on:
      - app
    networks:
      - tim

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redisdata:/data
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tim

volumes:
  dbdata:
  redisdata:
  storage-data:

networks:
  tim:
